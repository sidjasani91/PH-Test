/*
Question 1
The table dbo.Risk contains calculated risk scores for the population in dbo.Person. Write a 
query or group of queries that return the patient name, and their most recent risk level(s). 
Any patients that dont have a risk level should also be included in the results. 
*/

;with cte as(
select per.PersonName,RiskLevel,
DENSE_RANK() over(partition by ri.PersonID order by RiskDateTime desc) as recordrank
 from person per 
left join Risk ri on per.PersonID = ri.PersonID
)
select PersonName,RiskLevel
from cte where recordrank = 1
        
/**********************
QUESTION 2
The table dbo.Person contains basic demographic information. The source system users 
input nicknames as strings inside parenthesis. Write a query or group of queries to 
return the full name and nickname of each person. The nickname should contain only letters 
or be blank if no nickname exists.
**********************/

select  PersonName
,case when CHARINDEX('(', [PersonName]) < 1 then [PersonName]
    else LTRIM(RTRIM(REPLACE(REPLACE(REPLACE([PersonName], SUBSTRING([PersonName], CHARINDEX('(', [PersonName]), CHARINDEX(')', [PersonName]) - CHARINDEX('(', [PersonName])+1),'') ,')' ,''),'  ', ' '))) end as FullName
,case when CHARINDEX('(', [PersonName]) < 1 then ''
    else    SUBSTRING([PersonName], CHARINDEX('(', [PersonName])+1, CHARINDEX(')', [PersonName]) - CHARINDEX('(', [PersonName])-1)
end as NICKNAME
FROM [Person]
        

/***************
QUESTION 6
Write a query to return risk data for all patients, all payers 
and a moving average of risk for that patient and payer in dbo.Risk. 
**********************/

select distinct 
a.personid,a.AttributedPayer,RiskScore,RiskLevel,RiskDatetime,
AVG(RiskScore) over(partition by a.personid,a.AttributedPayer  order by RiskDateTime) as Avgmoving
from dbo.Risk a 
